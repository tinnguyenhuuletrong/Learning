{-# STDLIB_VERSION 3 #-}
{-# CONTENT_TYPE DAPP #-}
{-# SCRIPT_TYPE ACCOUNT #-}

let aPubKey = base58'Bc19i54rwGoA5Nhf5VzGvCtyKSZHbZE11J5wgc4EDWRf'
let bPubKey = base58'ogqPrTgdbEBYZr43hPG5BhoRVJ8K98221VvWhuMRpGi'
let cPubKey = base58'6FuC8zXaribmcP8xqHHkZLW2kodjNAG96yKYGwvQF2aL'

@Verifier(tx)
func verify() = {
    let a1 = sigVerify(tx.bodyBytes, tx.proofs[0], aPubKey)
    let a2 = sigVerify(tx.bodyBytes, tx.proofs[1], aPubKey)
    let a3 = sigVerify(tx.bodyBytes, tx.proofs[2], aPubKey)

    let b1 = sigVerify(tx.bodyBytes, tx.proofs[0], bPubKey)
    let b2 = sigVerify(tx.bodyBytes, tx.proofs[1], bPubKey)
    let b3 = sigVerify(tx.bodyBytes, tx.proofs[2], bPubKey)

    let c1 = sigVerify(tx.bodyBytes, tx.proofs[0], cPubKey)
    let c2 = sigVerify(tx.bodyBytes, tx.proofs[1], cPubKey)
    let c3 = sigVerify(tx.bodyBytes, tx.proofs[2], cPubKey)

    let aAnb = (a1 && b2) || (a1 && b3) || (a2 && b1) || (a2 && b3) || (a3 && b1) || (a3 && b2)
    let aAnc = (a1 && c2) || (a1 && c3) || (a2 && c1) || (a2 && c3) || (a3 && c1) || (a3 && c2)
    let bAnc = (b1 && c2) || (b1 && c3) || (b2 && c1) || (b2 && c3) || (b3 && c1) || (b3 && c2)

    match tx {
        case _ => aAnb || aAnc || bAnc
    }
}