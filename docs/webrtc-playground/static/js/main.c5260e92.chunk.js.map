{"version":3,"sources":["stores/constant.js","stores/libs/WebRTCPeer.js","stores/libs/FirebaseSignalChannel.js","stores/appStore.js","AppContext.js","containers/DisplayIfStep.js","components/ChoiceMode.js","components/WebRtcConfig.js","components/WebRtcHost.js","components/WebRtcClient.js","components/WebRtcStatus.js","components/WebRtcLog.js","components/WebRtcData.js","components/VideoPlayer.js","components/WebRtcVideoCall.js","containers/WebRTCSupport.js","containers/DisplayIfMode.js","App.js","serviceWorker.js","index.js"],"names":["ESTEP","CHOICE_MODE","NOT_CONNECT","CONNECTING","CONNECTED","DISCONNECT","ECLIENT_MODE","HOST","PEER","EACTION","reset","setAppStep","setRoomId","setAppMode","setMineMedia","updateConenction","updateWebRTCSupport","WebRTCPeer","signalChannel","_addSendSignalLog","data","newMsg","from","mode","_t","Date","signalLogs","push","emit","_addReceiveSignalLog","MODE","_onNewSignal","to","send","_onChannelMessage","peer","signal","_eventForward","name","this","disconnect","unsubcrible","destroy","simplePeerConfig","signalRoom","SimplePeer","initiator","connect","subcrible","on","forEach","key","handlerName","off","Promise","resolve","reject","getStats","err","stats","EventEmitter","FirebaseSignalChannel","database","Error","ref","_onMessage","snapshot","val","incommingBufferRef","refName","remove","Firebase","initializeApp","apiKey","databaseURL","initialState","supportWebRTC","appStep","roomId","now","mineMedia","connection","eventSource","reducer","state","action","newState","window","store","debugDev","console","log","type","previousMedia","previousConnection","getTracks","track","stop","DetectRTC","isWebRTCSupported","value","StateContext","createContext","StateProvider","children","Provider","useReducer","useStateValue","useContext","CONSTANT","ECONSTANT","expectedAppStep","check","Array","isArray","Fragment","includes","defaultIndex","tabs","dispatch","useEffect","pageUnload","addEventListener","removeEventListener","setMode","useCallback","onReset","updateRoomId","stepLock","disabled","className","onChange","e","target","placeholder","checked","style","margin","DisplayIfStep","onClick","useState","configJson","setConfig","isCorrect","setIsCorrect","JSON","parse","join","defaultValue","newVal","error","props","rtcConfig","dispatchRtcConfig","onRtcConfigChange","onStart","start","enable","WebRtcConfig","COLOR_MAP","connecting","connected","disconnected","status","setStatus","connectionInfo","setConnectionInfo","onChangeStatus","localAddress","localFamily","localPort","remoteAddress","remoteFamily","remotePort","local","remote","transformSignalLog","item","_time","title","content","stringify","map","itm","logs","setLogs","rtcStats","setRtcStats","intervalTicket","setInterval","a","getPeerStats","reverse","id","timestamp","others","clearInterval","msgLog","msg","signalLog","msgLogConnect","msgLogError","msgLogClose","msgSendTextMsg","textMsg","msgLogWithData","length","minHeight","maxHeight","overflowY","padding","index","String","Object","keys","toISOString","inputMsg","setInputMsg","onMsgChangeCallback","onSendTextMsg","onKeyPress","event","keyCode","which","stream","videoRef","useRef","current","video","srcObject","src","URL","createObjectURL","play","MediaOptions","otherStream","setOtherStream","incomingStream","toast","message","animate","in","out","onGatherVideoCallback","navigator","getUserMedia","addStream","VideoPlayer","expectedMode","checking","setChecking","load","Peer","WEBRTC_SUPPORT","class","App","WebRTCSupport","ChoiceMode","DisplayIfMode","WebRtcHost","WebRtcClient","WebRtcStatus","WebRtcLog","WebRtcData","WebRtcVideoCall","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5260e92.chunk.js","sourcesContent":["export const ESTEP = {\n  CHOICE_MODE: 'CHOICE_MODE',\n  NOT_CONNECT: 'NOT_CONNECT',\n  CONNECTING: 'CONNECTING',\n  CONNECTED: 'CONNECTED',\n  DISCONNECT: 'DISCONNECT'\n}\nexport const ECLIENT_MODE = {\n  HOST: 'HOST',\n  PEER: 'PEER'\n}\nexport const EACTION = {\n  reset: 'reset',\n  setAppStep: 'setAppStep',\n  setRoomId: 'setRoomId',\n  setAppMode: 'setAppMode',\n  setMineMedia: 'setMineMedia',\n  updateConenction: 'updateConenction',\n  updateWebRTCSupport: 'updateWebRTCSupport'\n}\n","import { EventEmitter } from 'events'\nimport SimplePeer from 'simple-peer'\n\nclass WebRTCPeer extends EventEmitter {\n  static MODE = {\n    HOST: 'HOST',\n    PEER: 'PEER'\n  }\n\n  constructor(signalChannel) {\n    super()\n    this.signalChannel = signalChannel\n    this.reset()\n  }\n\n  reset() {\n    this.signalChannel.disconnect()\n    this.unsubcrible()\n    if (this.peer) this.peer.destroy()\n    this.peer = null\n    this.mode = null\n    this.signalLogs = []\n  }\n\n  start({ mode, simplePeerConfig = {}, signalRoom }) {\n    this.mode = mode\n    this.peer = new SimplePeer({\n      initiator: this.mode === WebRTCPeer.MODE.HOST,\n      ...simplePeerConfig\n    })\n    this.signalChannel.connect({ signalRoom, mode })\n    this.subcrible()\n  }\n\n  subcrible() {\n    this.peer.on('signal', this._onNewSignal)\n\n    this.signalChannel.on('message', this._onChannelMessage)\n\n    const events = ['error', 'connect', 'data', 'close', 'stream']\n    events.forEach(key => {\n      const handlerName = `$on${key}`\n      this[handlerName] = this._eventForward(key)\n      this.peer.on(key, this[handlerName])\n    })\n  }\n\n  unsubcrible() {\n    if (!this.peer) return\n\n    this.signalChannel.off('message', this._onChannelMessage)\n    this.signalChannel.disconnect()\n\n    this.peer.off('signal', this._onNewSignal)\n    const events = ['error', 'connect', 'data', 'close', 'stream']\n    events.forEach(key => {\n      const handlerName = `$on${key}`\n      this.peer.off(key, this[handlerName])\n    })\n  }\n\n  getPeerStats() {\n    return new Promise((resolve, reject) => {\n      if (!this.peer) return null\n      this.peer.getStats((err, stats = []) => {\n        resolve(stats)\n      })\n    })\n  }\n\n  send(data) {\n    if (!this.peer) return null\n    this.peer.send(data)\n  }\n\n  _addSendSignalLog = data => {\n    const newMsg = {\n      from: this.mode,\n      data,\n      _t: new Date()\n    }\n    this.signalLogs.push(newMsg)\n\n    this.emit('signalLog', newMsg)\n  }\n\n  _addReceiveSignalLog = data => {\n    const other =\n      this.mode === WebRTCPeer.MODE.HOST\n        ? WebRTCPeer.MODE.PEER\n        : WebRTCPeer.MODE.HOST\n    const newMsg = {\n      from: other,\n      data,\n      _t: new Date()\n    }\n    this.signalLogs.push(newMsg)\n\n    this.emit('signalLog', newMsg)\n  }\n\n  //-------------------------------------------------------//\n  //  Event handler\n  //-------------------------------------------------------//\n\n  _onNewSignal = data => {\n    this._addSendSignalLog(data)\n    const to =\n      this.mode === WebRTCPeer.MODE.HOST\n        ? WebRTCPeer.MODE.PEER\n        : WebRTCPeer.MODE.HOST\n\n    this.signalChannel.send(to, data)\n  }\n\n  _onChannelMessage = data => {\n    this._addReceiveSignalLog(data)\n    this.peer.signal(data)\n  }\n\n  _eventForward = name => data => {\n    this.emit(name, data)\n  }\n}\n\nexport default WebRTCPeer\n","import { EventEmitter } from 'events'\n\nclass FirebaseSignalChannel extends EventEmitter {\n  constructor(database) {\n    super()\n    this.database = database\n    this.reset()\n  }\n\n  reset() {\n    this.unsubcrible()\n    this.signalRoom = null\n    this.incommingBufferRef = null\n  }\n\n  async connect({ signalRoom, mode }) {\n    this.signalRoom = signalRoom\n    const name = `rooms/${signalRoom}/buffer_${mode}`\n    this.refName = name\n    this.incommingBufferRef = this.database.ref(name)\n    this.incommingBufferRef.on('child_added', this._onMessage)\n  }\n\n  disconnect() {\n    this.reset()\n  }\n\n  send = (to, data) => {\n    if (!this.signalRoom) throw new Error('call connect(..) first')\n    const name = `rooms/${this.signalRoom}/buffer_${to}`\n    const bufferRef = this.database.ref(name)\n    bufferRef.push(data)\n  }\n\n  unsubcrible() {\n    if (this.incommingBufferRef) {\n      this.incommingBufferRef.remove()\n      this.incommingBufferRef.off('child_added', this._onMessage)\n    }\n  }\n\n  //-------------------------------------------------------//\n  //  Event handler\n  //-------------------------------------------------------//\n\n  _onMessage = snapshot => {\n    const data = snapshot.val()\n    this.emit('message', data)\n  }\n}\n\nexport default FirebaseSignalChannel\n","import { EventEmitter } from 'events'\nimport DetectRTC from 'detectrtc'\nimport Firebase from 'firebase/app'\nimport 'firebase/database'\n\nimport { ESTEP, EACTION } from './constant'\nimport WebRTCPeer from './libs/WebRTCPeer'\nimport FirebaseSignalChannel from './libs/FirebaseSignalChannel'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBe719lkdeQBL0McXykgBMUClMUN3UgpUQ',\n  databaseURL: 'https://weeklyhack-ff068.firebaseio.com/'\n}\nFirebase.initializeApp(firebaseConfig)\n\nexport const initialState = {\n  supportWebRTC: false,\n  appStep: ESTEP.CHOICE_MODE,\n  roomId: `room-${Date.now()}`,\n  mode: '',\n  mineMedia: null,\n  connection: new WebRTCPeer(new FirebaseSignalChannel(Firebase.database())),\n  eventSource: new EventEmitter()\n}\n\nconst mainReducer = (state, action) => {\n  console.log('action', action)\n  switch (action.type) {\n    case EACTION.reset:\n      const previousMedia = state.mineMedia\n      const previousConnection = state.connection\n      if (previousMedia) {\n        previousMedia.getTracks().forEach(track => track.stop())\n      }\n      if (previousConnection) {\n        previousConnection.reset()\n      }\n      return {\n        ...initialState,\n        eventSource: new EventEmitter(),\n        supportWebRTC: DetectRTC.isWebRTCSupported\n      }\n    case EACTION.updateWebRTCSupport:\n      return {\n        ...state,\n        supportWebRTC: action.value\n      }\n    case EACTION.setAppMode:\n      return {\n        ...state,\n        mode: action.value\n      }\n    case EACTION.setRoomId:\n      return {\n        ...state,\n        roomId: action.value\n      }\n    case EACTION.setAppStep:\n      return {\n        ...state,\n        appStep: action.value\n      }\n    case EACTION.setMineMedia:\n      return {\n        ...state,\n        mineMedia: action.value\n      }\n    case EACTION.updateConenction:\n      return {\n        ...state,\n        connection: action.value\n      }\n    default:\n      return state\n  }\n}\n\nconst debugDev = reducer => (state, action) => {\n  const newState = reducer(state, action)\n  window.store = newState\n  return newState\n}\n\nexport const reducer = debugDev(mainReducer)\n","import React, { createContext, useContext, useReducer } from 'react'\nimport { initialState, reducer } from './stores/appStore'\nimport * as ECONSTANT from './stores/constant'\n\nexport const StateContext = createContext()\nexport const StateProvider = ({ children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n)\nexport const useStateValue = () => useContext(StateContext)\nexport const CONSTANT = ECONSTANT\n","import React from 'react'\nimport { useStateValue } from '../AppContext'\n\nexport default ({ expectedAppStep, children }) => {\n  const [{ appStep }] = useStateValue()\n  const check = Array.isArray(expectedAppStep)\n    ? expectedAppStep\n    : [expectedAppStep]\n  return (\n    <React.Fragment>{check.includes(appStep) ? children : null}</React.Fragment>\n  )\n}\n","import React, { useCallback, useEffect } from 'react'\nimport DisplayIfStep from '../containers/DisplayIfStep'\nimport { useStateValue, CONSTANT } from '../AppContext'\n\nexport default ({ defaultIndex = 0, tabs = [] }) => {\n  const [{ appStep, mode, roomId, connection }, dispatch] = useStateValue()\n\n  useEffect(() => {\n    const pageUnload = () => {\n      dispatch({\n        type: CONSTANT.EACTION.reset\n      })\n    }\n    window.addEventListener('beforeunload', pageUnload, false)\n    return () => {\n      window.removeEventListener('beforeunload', pageUnload)\n    }\n  }, [dispatch, connection])\n\n  // Set app mode\n  const setMode = useCallback(\n    mode => {\n      dispatch({\n        type: CONSTANT.EACTION.setAppMode,\n        value: mode\n      })\n      dispatch({\n        type: CONSTANT.EACTION.setAppStep,\n        value: CONSTANT.ESTEP.NOT_CONNECT\n      })\n    },\n    [dispatch]\n  )\n\n  const onReset = useCallback(() => {\n    connection && connection.destroy && connection.destroy()\n    dispatch({\n      type: CONSTANT.EACTION.reset\n    })\n  }, [dispatch, connection])\n\n  // Set room Id\n  const updateRoomId = useCallback(\n    roomId => {\n      dispatch({\n        type: CONSTANT.EACTION.setRoomId,\n        value: roomId\n      })\n    },\n    [dispatch]\n  )\n  const stepLock =\n    appStep === CONSTANT.ESTEP.CHOICE_MODE\n      ? { disabled: false }\n      : { disabled: true }\n\n  return (\n    <div className=\"columns is-multiline is-centered\">\n      <div className=\"column is-6\">\n        <fieldset {...stepLock}>\n          <input\n            className=\"input is-rounded\"\n            type=\"text\"\n            value={roomId}\n            onChange={e => updateRoomId(e.target.value)}\n            placeholder=\"Room Id\"\n          />\n        </fieldset>\n      </div>\n      <div className=\"column is-full\">\n        <fieldset {...stepLock}>\n          <div className=\"field is-grouped is-grouped-centered\">\n            <label className=\"radio\">\n              <input\n                type=\"radio\"\n                checked={mode === CONSTANT.ECLIENT_MODE.HOST}\n                onChange={e => setMode(CONSTANT.ECLIENT_MODE.HOST)}\n              />\n              <span style={{ margin: 5 }}>Host</span>\n            </label>\n            <label className=\"radio\">\n              <input\n                type=\"radio\"\n                checked={mode === CONSTANT.ECLIENT_MODE.PEER}\n                onChange={e => setMode(CONSTANT.ECLIENT_MODE.PEER)}\n              />\n              <span style={{ margin: 5 }}>Peer</span>\n            </label>\n          </div>\n        </fieldset>\n      </div>\n      <div className=\"column\">\n        <div className=\"field is-grouped is-grouped-centered\">\n          <DisplayIfStep\n            expectedAppStep={[\n              CONSTANT.ESTEP.CONNECTED,\n              CONSTANT.ESTEP.DISCONNECT,\n              CONSTANT.ESTEP.NOT_CONNECT\n            ]}\n          >\n            <button className=\"button is-warning\" onClick={onReset}>\n              Reset\n            </button>\n          </DisplayIfStep>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\n\nexport default ({ onChange }) => {\n  const [configJson, setConfig] = useState(`{\n    \"trickle\": true,\n    \"config\": {\n      \"iceServers\": [ { \"urls\": \"stun:stun.l.google.com:19302\" }, { \"urls\": \"stun:global.stun.twilio.com:3478?transport=udp\" } ]\n    }\n  }`)\n  const [isCorrect, setIsCorrect] = useState(true)\n\n  // Init value\n  useEffect(() => {\n    onChange && onChange(JSON.parse(configJson))\n  }, [])\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\">\n        STUN/TURN config{' '}\n        <span\n          className={[\n            'icon',\n            isCorrect ? 'has-text-success' : 'has-text-danger'\n          ].join(' ')}\n        >\n          <i\n            className={['fas', isCorrect ? 'fa-check' : 'fa-ban'].join(' ')}\n          ></i>\n        </span>\n      </label>\n      <div className={['control'].join(' ')}>\n        <textarea\n          className={['textarea', 'is-small'].join(' ')}\n          defaultValue={configJson}\n          onChange={e => {\n            try {\n              setConfig(e.target.value)\n              const newVal = JSON.parse(e.target.value)\n              onChange && onChange(newVal)\n              setIsCorrect(true)\n            } catch (error) {\n              setIsCorrect(false)\n            }\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React, { useCallback, useReducer } from 'react'\n\nimport WebRtcConfig from './WebRtcConfig'\n\nimport { useStateValue, CONSTANT } from '../AppContext'\n\nexport default props => {\n  const [{ roomId, mode, connection, appStep }, dispatch] = useStateValue()\n  const [rtcConfig, dispatchRtcConfig] = useReducer((state, val) => {\n    return {\n      ...state,\n      ...val\n    }\n  }, {})\n\n  const onRtcConfigChange = useCallback(\n    val => {\n      dispatchRtcConfig(val)\n    },\n    [dispatchRtcConfig]\n  )\n\n  // UI Callback\n  const onStart = useCallback(() => {\n    console.log('Create peer with', rtcConfig)\n    connection.start({ mode, simplePeerConfig: rtcConfig, signalRoom: roomId })\n    dispatch({\n      type: CONSTANT.EACTION.setAppStep,\n      value: CONSTANT.ESTEP.CONNECTING\n    })\n  }, [connection, rtcConfig, mode, roomId, dispatch])\n\n  const enable = appStep === CONSTANT.ESTEP.NOT_CONNECT\n\n  return (\n    <fieldset disabled={!enable}>\n      <WebRtcConfig onChange={onRtcConfigChange} />\n      <div className=\"field\">\n        <div className=\"field\">\n          <button className=\"button is-primary\" onClick={onStart}>\n            Start\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  )\n}\n","import React, { useCallback, useReducer } from 'react'\n\nimport WebRtcConfig from './WebRtcConfig'\n\nimport { useStateValue, CONSTANT } from '../AppContext'\n\nexport default props => {\n  const [{ roomId, mode, connection, appStep }, dispatch] = useStateValue()\n  const [rtcConfig, dispatchRtcConfig] = useReducer((state, val) => {\n    return {\n      ...state,\n      ...val\n    }\n  }, {})\n\n  const onRtcConfigChange = useCallback(\n    val => {\n      dispatchRtcConfig(val)\n    },\n    [dispatchRtcConfig]\n  )\n\n  // UI Callback\n  const onStart = useCallback(() => {\n    console.log('Create peer with', rtcConfig)\n    connection.start({ mode, simplePeerConfig: rtcConfig, signalRoom: roomId })\n    dispatch({\n      type: CONSTANT.EACTION.setAppStep,\n      value: CONSTANT.ESTEP.CONNECTING\n    })\n  }, [connection, rtcConfig, mode, roomId, dispatch])\n\n  const enable = appStep === CONSTANT.ESTEP.NOT_CONNECT\n\n  return (\n    <fieldset disabled={!enable}>\n      <WebRtcConfig onChange={onRtcConfigChange} />\n      <div className=\"field\">\n        <div className=\"field\">\n          <button className=\"button is-primary\" onClick={onStart}>\n            Start\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useStateValue, CONSTANT } from '../AppContext'\n\nconst COLOR_MAP = {\n  connecting: 'is-link',\n  connected: 'is-primary',\n  error: 'is-danger',\n  disconnected: 'is-warning'\n}\n\nexport default ({ defaultIndex = 0, tabs = [] }) => {\n  const [{ connection }, dispatch] = useStateValue()\n  const [status, setStatus] = useState('connecting')\n  const [connectionInfo, setConnectionInfo] = useState({})\n\n  useEffect(() => {\n    const onChangeStatus = status => setStatus(status)\n    connection.on('connect', e => {\n      onChangeStatus('connected')\n      const { peer } = connection\n      const { localAddress = '', localFamily = '', localPort = '' } = peer\n      const { remoteAddress = '', remoteFamily = '', remotePort = '' } = peer\n\n      setConnectionInfo({\n        local: `${localFamily} - ${localAddress}:${localPort}`,\n        remote: `${remoteFamily} - ${remoteAddress}:${remotePort}`\n      })\n\n      dispatch({\n        type: CONSTANT.EACTION.setAppStep,\n        value: CONSTANT.ESTEP.CONNECTED\n      })\n    })\n    connection.on('close', e => {\n      onChangeStatus('disconnected')\n      setConnectionInfo({})\n      dispatch({\n        type: CONSTANT.EACTION.setAppStep,\n        value: CONSTANT.ESTEP.DISCONNECT\n      })\n    })\n    connection.on('error', e => onChangeStatus('error'))\n  }, [connection, setConnectionInfo, dispatch])\n\n  return (\n    <article className={['message', COLOR_MAP[status]].join(' ')}>\n      <div className=\"message-body\">\n        <p className=\"is-capitalized\">{status}</p>\n        <p className=\"is-size-7 is-italic\t\">\n          Local: {connectionInfo.local && `${connectionInfo.local}`}\n        </p>\n        <p className=\"is-size-7 is-italic\t\">\n          Remote: {connectionInfo.remote && `${connectionInfo.remote}`}\n        </p>\n      </div>\n    </article>\n  )\n}\n","import React, { useEffect, useState } from 'react'\n\nimport { useStateValue } from '../AppContext'\n\nfunction transformSignalLog(item) {\n  const { from, data, _t } = item\n  return {\n    _time: _t,\n    title: `[SIGNAL] ${from}`,\n    content: `${JSON.stringify(data)}`\n  }\n}\n\nexport default ({ defaultIndex = 0, tabs = [] }) => {\n  const [{ connection, eventSource }] = useStateValue()\n  const [logs, setLogs] = useState(\n    connection.signalLogs.map(itm => transformSignalLog(itm))\n  )\n  const [rtcStats, setRtcStats] = useState([])\n\n  // Refresh connection stats\n  useEffect(() => {\n    const intervalTicket = setInterval(async () => {\n      try {\n        const stats = (await connection.getPeerStats()) || []\n        setRtcStats(\n          stats.reverse().map(({ type, id, timestamp, ...others }) => ({\n            type,\n            id,\n            timestamp,\n            others\n          }))\n        )\n      } catch (error) {}\n    }, 1000)\n    return () => clearInterval(intervalTicket)\n  }, [connection])\n\n  // Subcrible events\n  useEffect(() => {\n    const msgLog = (msg, title = '') => () => {\n      setLogs([\n        {\n          _time: new Date(),\n          title,\n          content: msg\n        },\n        ...logs\n      ])\n    }\n\n    const signalLog = msg => {\n      setLogs([transformSignalLog(msg), ...logs])\n    }\n\n    const msgLogConnect = msgLog('connected')\n    const msgLogError = msgLog('error')\n    const msgLogClose = msgLog('disconnected')\n\n    const msgSendTextMsg = textMsg => msgLog(`Send -> ${textMsg}`)()\n    const msgLogWithData = msg => msgLog(`Recv -> ${msg}`)()\n\n    connection.on('connect', msgLogConnect)\n    connection.on('error', msgLogError)\n    connection.on('data', msgLogWithData)\n    connection.on('close', msgLogClose)\n\n    connection.on('signalLog', signalLog)\n    eventSource.on('action-send-text', msgSendTextMsg)\n\n    return () => {\n      connection.off('connect', msgLogConnect)\n      connection.off('error', msgLogError)\n      connection.off('data', msgLogWithData)\n      connection.off('close', msgLogClose)\n\n      connection.off('signalLog', signalLog)\n      eventSource.off('action-send-text', msgSendTextMsg)\n    }\n  }, [logs, setLogs, connection, eventSource])\n\n  return (\n    <div className=\"column is-full\">\n      <h3>RTC Status Logs - {rtcStats.length}</h3>\n      <div\n        className=\"container has-background-white-bis is-size-7\"\n        style={{\n          minHeight: '50vh',\n          maxHeight: '50vh',\n          overflowY: 'auto',\n          padding: '5px 10px'\n        }}\n      >\n        {rtcStats.map(({ type, id, timestamp, others }, index) => (\n          <div className=\"content\" key={id}>\n            <p>\n              {index}) Type: <strong>{String(type)}</strong> - Id: {String(id)}\n            </p>\n            <ul>\n              {Object.keys(others).map((key, index) => (\n                <li key={index}>\n                  {String(key)}: {String(others[key])}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </div>\n      <hr />\n      <div\n        className=\"container has-background-grey-lighter is-size-7\"\n        style={{\n          minHeight: '50vh',\n          maxHeight: '50vh',\n          overflowY: 'auto',\n          padding: '5px 10px'\n        }}\n      >\n        {logs.map(({ content, title = '', _time }, index) => (\n          <div className=\"content\" key={index}>\n            <p>\n              - {_time.toISOString()} <strong>{String(title)}</strong> -{' '}\n              <small>{String(content)}</small>\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport { useStateValue, CONSTANT } from '../AppContext'\n\nexport default ({ defaultIndex = 0, tabs = [] }) => {\n  const [{ eventSource, connection, appStep }] = useStateValue()\n  const [inputMsg, setInputMsg] = useState([])\n\n  const onMsgChangeCallback = useCallback(val => setInputMsg(val), [\n    setInputMsg\n  ])\n\n  const onSendTextMsg = useCallback(() => {\n    connection.send(inputMsg)\n    eventSource.emit('action-send-text', inputMsg)\n    onMsgChangeCallback('')\n  }, [inputMsg, connection, eventSource, onMsgChangeCallback])\n\n  const enable = appStep === CONSTANT.ESTEP.CONNECTED\n\n  return (\n    <fieldset disabled={!enable}>\n      <div className=\"columns\">\n        <div className=\"column is-11\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"message to send\"\n            value={inputMsg}\n            onChange={e => onMsgChangeCallback(e.target.value)}\n            onKeyPress={e => {\n              if (!e) e = window.event\n              var keyCode = e.keyCode || e.which\n              if (String(keyCode) === '13') {\n                onSendTextMsg(e.target.value)\n                return false\n              }\n            }}\n          />\n        </div>\n        <div className=\"column\">\n          <button className=\"button is-info\" onClick={onSendTextMsg}>\n            Send\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  )\n}\n","import React, { useRef, useEffect } from 'react'\nexport default ({ stream }) => {\n  const videoRef = useRef(null)\n  useEffect(() => {\n    if (!videoRef.current || !stream) return\n    const video = videoRef.current\n    if ('srcObject' in video) {\n      video.srcObject = stream\n    } else {\n      video.src = window.URL.createObjectURL(stream) // for older browsers\n    }\n    video.play()\n  }, [stream])\n  return (\n    <>\n      <video ref={videoRef} />\n    </>\n  )\n}\n","import React, { useEffect, useState, useCallback } from 'react'\nimport { useStateValue, CONSTANT } from '../AppContext'\nimport { toast } from 'bulma-toast'\nimport VideoPlayer from './VideoPlayer'\n\nconst MediaOptions = { video: true }\n\nexport default props => {\n  const [{ mineMedia, connection, appStep }, dispatch] = useStateValue()\n  const [otherStream, setOtherStream] = useState(null)\n\n  // Other stream\n  useEffect(() => {\n    if (!connection) return\n    const incomingStream = stream => {\n      toast({\n        message: `video stream recived`,\n        type: 'is-info',\n        animate: { in: 'fadeIn', out: 'fadeOut' }\n      })\n      setOtherStream(stream)\n    }\n    connection.on('stream', incomingStream)\n    return () => {\n      connection.off('stream', incomingStream)\n    }\n  }, [connection, setOtherStream])\n\n  // Gather Media\n  const onGatherVideoCallback = useCallback(() => {\n    const gotMedia = stream => {\n      // Add Stream\n      connection.peer.addStream(stream)\n\n      dispatch({\n        type: CONSTANT.EACTION.setMineMedia,\n        value: stream\n      })\n    }\n    if (!navigator) {\n      return toast({\n        message: `error - navigator not support`,\n        type: 'is-error',\n        animate: { in: 'fadeIn', out: 'fadeOut' }\n      })\n    }\n    // get video/voice stream\n    navigator.getUserMedia(MediaOptions, gotMedia, err => {\n      toast({\n        message: `error - ${err.message}`,\n        type: 'is-error',\n        animate: { in: 'fadeIn', out: 'fadeOut' }\n      })\n    })\n  }, [dispatch, connection.peer])\n\n  const enable = appStep === CONSTANT.ESTEP.CONNECTED\n\n  return (\n    <fieldset disabled={!enable}>\n      <div className=\"columns is-multiline is-centered\">\n        <div className=\"column is-full\">\n          <fieldset>\n            <div className=\"field is-grouped is-grouped-centered\">\n              <button\n                className=\"button is-success\"\n                onClick={onGatherVideoCallback}\n              >\n                With Media\n              </button>\n            </div>\n          </fieldset>\n        </div>\n        <hr />\n        <div className=\"column is-12\">\n          <div className=\"columns is-centered\">\n            <div className=\"column is-6\">\n              <p>Me</p>\n              <VideoPlayer stream={mineMedia} />\n            </div>\n            <div className=\"column is-6\">\n              <p>Other</p>\n              <VideoPlayer stream={otherStream} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </fieldset>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport DetectRTC from 'detectrtc'\nimport Peer from 'simple-peer'\nimport { useStateValue, CONSTANT } from '../AppContext'\n\nexport default ({ expectedMode, children }) => {\n  const [{ supportWebRTC }, dispatch] = useStateValue()\n  const [checking, setChecking] = useState(true)\n\n  useEffect(() => {\n    DetectRTC.load(() => {\n      dispatch({\n        type: CONSTANT.EACTION.updateWebRTCSupport,\n        value: DetectRTC.isWebRTCSupported\n      })\n      setChecking(false)\n    })\n  }, [dispatch])\n\n  return (\n    <React.Fragment>\n      {checking ? null : supportWebRTC && Peer.WEBRTC_SUPPORT ? (\n        children\n      ) : (\n        <article class=\"message is-danger\">\n          <div class=\"message-body\">Browser don't support WebRTC</div>\n        </article>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { useStateValue } from '../AppContext'\n\nexport default ({ expectedMode, children }) => {\n  const [{ mode }] = useStateValue()\n\n  return (\n    <React.Fragment>{expectedMode === mode ? children : null}</React.Fragment>\n  )\n}\n","import React from 'react'\nimport ChoiceMode from './components/ChoiceMode'\nimport WebRtcHost from './components/WebRtcHost'\nimport WebRtcClient from './components/WebRtcClient'\nimport WebRtcStatus from './components/WebRtcStatus'\nimport WebRtcLog from './components/WebRtcLog'\nimport WebRtcData from './components/WebRtcData'\nimport WebRtcVideoCall from './components/WebRtcVideoCall'\nimport WebRTCSupport from './containers/WebRTCSupport'\nimport DisplayIfMode from './containers/DisplayIfMode'\nimport { StateProvider, CONSTANT } from './AppContext'\n\nfunction App() {\n  return (\n    <StateProvider>\n      <section className=\"section \">\n        <div className=\"container\">\n          <section className=\"hero\">\n            <div className=\"hero-body\">\n              <div className=\"container\">\n                <h1 className=\"title\">Web RTC Playground</h1>\n              </div>\n            </div>\n          </section>\n          <WebRTCSupport>\n            <p className=\"has-text-centered is-size-3\">Start here !</p>\n            <div className=\"column\">\n              <div className=\"box\">\n                <ChoiceMode />\n              </div>\n            </div>\n\n            <DisplayIfMode expectedMode={CONSTANT.ECLIENT_MODE.HOST}>\n              <div className=\"column\">\n                <div className=\"box\">\n                  <WebRtcHost />\n                </div>\n              </div>\n            </DisplayIfMode>\n\n            <DisplayIfMode expectedMode={CONSTANT.ECLIENT_MODE.PEER}>\n              <div className=\"column\">\n                <div className=\"box\">\n                  <WebRtcClient />\n                </div>\n              </div>\n            </DisplayIfMode>\n\n            <div className=\"column\">\n              <WebRtcStatus />\n            </div>\n\n            <div className=\"column is-multiline\">\n              <div className=\"box\">\n                <WebRtcLog />\n              </div>\n              <div className=\"box\">\n                <WebRtcData />\n              </div>\n              <div className=\"box\">\n                <WebRtcVideoCall />\n              </div>\n            </div>\n          </WebRTCSupport>\n        </div>\n      </section>\n    </StateProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './vendor/import-bulma'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}