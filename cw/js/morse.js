var Morse = {};


Morse.alpha = {
  'A': '10111',
  'B': '111010101',
  'C': '11101011101',
  'D': '1110101',
  'E': '1',
  'F': '101011101',
  'G': '111011101',
  'H': '1010101',
  'I': '101',
  'J': '1011101110111',
  'K': '111010111',
  'L': '101110101',
  'M': '1110111',
  'N': '11101',
  'O': '11101110111',
  'P': '10111011101',
  'Q': '1110111010111',
  'R': '1011101',
  'S': '10101',
  'T': '111',
  'U': '1010111',
  'V': '101010111',
  'W': '101110111',
  'X': '11101010111',
  'Y': '1110101110111',
  'Z': '11101110101',
  '0': '1110111011101110111',
  '1': '10111011101110111',
  '2': '101011101110111',
  '3': '1010101110111',
  '4': '10101010111',
  '5': '101010101',
  '6': '11101010101',
  '7': '1110111010101',
  '8': '111011101110101',
  '9': '11101110111011101',
  '.': '10111010111010111',
  ',': '1110111010101110111',
  '?': '101011101110101',
  "'": '1011101110111011101',
  '!': '1110101110101110111',
  '/': '1110101011101',
  '(': '111010111011101',
  ')': '1110101110111010111',
  '&': '10111010101',
  ':': '11101110111010101',
  ';': '11101011101011101',
  '=': '1110101010111',
  '+': '1011101011101',
  '-': '111010101010111',
  '_': '10101110111010111',
  '"': '101110101011101',
  '$': '10101011101010111',
  '@': '10111011101011101',
  ' ': '0' // Technically is 7 0-bits, but we assume that a space will always be between two other characters
};

Morse.beta = {
  '10111': 'A',
  '111010101': 'B',
  '11101011101': 'C',
  '1110101': 'D',
  '1': 'E',
  '101011101': 'F',
  '111011101': 'G',
  '1010101': 'H',
  '101': 'I',
  '1011101110111': 'J',
  '111010111': 'K',
  '101110101': 'L',
  '1110111': 'M',
  '11101': 'N',
  '11101110111': 'O',
  '10111011101': 'P',
  '1110111010111': 'Q',
  '1011101': 'R',
  '10101': 'S',
  '111': 'T',
  '1010111': 'U',
  '101010111': 'V',
  '101110111': 'W',
  '11101010111': 'X',
  '1110101110111': 'Y',
  '11101110101': 'Z',
  '1110111011101110111': '0',
  '10111011101110111': '1',
  '101011101110111': '2',
  '1010101110111': '3',
  '10101010111': '4',
  '101010101': '5',
  '11101010101': '6',
  '1110111010101': '7',
  '111011101110101': '8',
  '11101110111011101': '9',
  '10111010111010111': '.',
  '1110111010101110111': ',',
  '101011101110101': '?',
  '1011101110111011101': "'",
  '1110101110101110111': '!',
  '1110101011101': '/',
  '111010111011101': '(',
  '1110101110111010111': ')',
  '10111010101': '&',
  '11101110111010101': ':',
  '11101011101011101': ';',
  '1110101010111': '=',
  '1011101011101': '+',
  '111010101010111': '-',
  '10101110111010111': '_',
  '101110101011101': '"',
  '10101011101010111': '$',
  '10111011101011101': '@',
  '0': ' ' // Technically is 7 0-bits, but we assume that a space will always be between two other character:' ',
};

Morse.encode = function(message) {
  // ·–·–·– ·–·–·– ·–·–·–

  let rawBinString = Array.from(message).reduce((res, char) => {
    return res.concat(Morse.alpha[char]).concat('000')
  }, "")

  // padding
  const mod = rawBinString.length % 32

  if (mod != 0) {
    rawBinString = rawBinString.concat('0'.repeat(32 - mod))
  }

  // convert to bytes
  const block = rawBinString.length / 32
  const res = []
  for (var i = 0; i < block; i++) {
    let num = 0;
    for (var j = 0; j < 32; j++) {
      if (rawBinString[i * 32 + j] == '1')
        num = num | (1 << (31 - j))
    }
    res.push(num)
  }
  console.log(res)
  return res;
};

Morse.decode = function(integerArray) {
  // ·–·–·– ·–·–·– ·–·–·–
  const rawBinString = integerArray.reduce((acc, value) => {
    for (let i = 0; i < 32; i++) {
      const mask = (1 << (31 - i))
      const bit = (value & mask)
      if (bit == 0)
        acc = acc + '0';
      else
        acc = acc + '1';
    }
    return acc
  }, "")
  
  const token = []
  let end = rawBinString.indexOf('000')
  let begin = 0
  while(end != -1) {
    const val = rawBinString.slice(begin, end)
    token.push(val)

    begin = end + 3;
    end = rawBinString.indexOf('000', begin + 1)
  }

  return res = token.map(itm => {
    return Morse.beta[itm] || ''
  }).join('').trim()
};


// Morse.encode("HELLO WORLD")
console.log(Morse.decode([-1440552402, -1547992901, -1896993141, -1461059584]))
console.log(Morse.decode([-2004318070,536870912]))